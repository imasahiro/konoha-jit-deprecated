// Mini UnitTest for String
// Author: Utaro Hiraoka <utrhira at users.sourceforge.jp>
//

### string literal
>>> ""
""
>>> ''
""
>>> ``
""

>>> "string"
"string"
>>> 'string'
"string"
>>> `string`
"string"

>>> """
... multiln
... double
... """
"multiln\ndouble"
>>> '''
... multiln
... single
... '''
"multiln\nsingle"
>>> ```
... multiln
... back
... ```
"multiln\nback"

>>> """a"""
"a"
>>> '''a'''
"a"
>>> ```a```
"a"

>>> "''"
"''"
>>> "``"
"``"
>>> '""'
"\"\""
>>> '``'
"``"
>>> `""`
"\"\""
>>> `''`
"''"

>>> "'"
"'"
>>> "`"
"`"
>>> typeof('"')
konoha.Int
>>> typeof('`')
konoha.Int
>>> `"`
"\""
>>> `'`
"'"

### string variables
>>> String s0;
""
>>> String s1 = "initialize";
"initialize"
>>> s1 = "substitute";
"substitute"

//### type inference of String
//>>> String
//konoha.String
//>>> si0 = "inference";
//>>> typeof(si0)
//konoha.String
//>>> si1 = si0;
//>>> typeof(si1)
//konoha.String
//>>> sii = 'a';
//>>> typeof(sii)
//konoha.Int

//*============================================*/
// operator

### string size operator
>>> String ss = "s";
>>> String sn = "string";
>>> String sm = "s"; for(int i=0;i< 8;i++) { sm += sm; }
>>> String sl = "s"; for(int i=0;i<12;i++) { sl += sl; }
>>> |"string"|
6
>>> |""|
0
>>> |ss|
1
>>> |sn|
6
>>> |sm|
256
>>> |sl|
4096


//### string size operator : multi
//>>> String mbss = "ｓ";
//>>> String mbsn = "ｓｔｒｉｎｇ";
//>>> |"ｓｔｒｉｎｇ"|
//6
//>>> |mbss|
//1
//>>> |mbsn|
//6


### string get operator
>>> String sn = "string";
>>> "string"[0]
"s"
>>> sn[2]
"r"
>>> sn[-2]
"n"

### string get operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ｓｔｒｉｎｇ"[0]
"ｓ"
>>> mbsn[2]
"ｒ"
>>> mbsn[-2]
"ｎ"


### string + operator
>>> String ss = "s";
>>> String sn = "string";
>>> String sm = "s"; for(int i=0;i< 8;i++) { sm += sm; }
>>> String sl = "s"; for(int i=0;i<12;i++) { sl += sl; }
>>> "this is " + "string"
"this is string"
>>> "this is " + sn
"this is string"
>>> sn + " is this"
"string is this"
>>> ss + sn
"sstring"
>>> "" + sn
"string"
>>> "" + "" + ""
""
>>> "" + 7
"7"
>>> "" + 7.0
"7.000000"
>>> "" + true
"true"
>>> "" + 0 + false + 1.23
"0false1.230000"
>>> |ss + sm|
257
>>> |ss + sl|
4097
>>> |sn + sm|
262
>>> |sn + sl|
4102
>>> |sm + sm|
512
>>> |sm + sl|
4352
>>> |sl + sm|
4352
>>> |sl + sl|
8192


### string + operator : multi
>>> String sn = "string";
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ｔｈｉｓ　ｉｓ　" + "ｓｔｒｉｎｇ"
"ｔｈｉｓ　ｉｓ　ｓｔｒｉｎｇ"
>>> mbsn + "　ｉｓ　ｔｈｉｓ"
"ｓｔｒｉｎｇ　ｉｓ　ｔｈｉｓ"
>>> "ｔｈｉｓ　ｉｓ　" + mbsn
"ｔｈｉｓ　ｉｓ　ｓｔｒｉｎｇ"
>>> sn + mbsn
"stringｓｔｒｉｎｇ"
>>> mbsn + sn
"ｓｔｒｉｎｇstring"
>>> mbsn + 7
"ｓｔｒｉｎｇ7"
>>> mbsn + 1.23
"ｓｔｒｉｎｇ1.230000"
>>> mbsn + true
"ｓｔｒｉｎｇtrue"


### string - operator
>>> String sn = "string";
>>> "string" - "s"
"tring"
>>> "this is string" - "s"
"thi i tring"
>>> sn - "s"
"tring"
>>> sn - "z"
"string"
>>> sn - ""
"string"
>>> sn - sn
""
>>> "" - sn
""
>>> "" - "" - ""
""

### string - operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ"
>>> "ｓｔｒｉｎｇ" - "ｓ"
"ｔｒｉｎｇ"
>>> mbsn - "ｓ"
"ｔｒｉｎｇ"
>>> mbsn - ""
"ｓｔｒｉｎｇ"
>>> mbsn - mbsn
""
>>> "" - mbsn
""


### string to operator
>>> String sn = "string";
>>> "string"[1 to 3]
"tri"
>>> sn[1 to 3]
"tri"
>>> sn[to 3]
"stri"
>>> sn[1 to]
"tring"
>>> sn[3 to 3]
"i"
>>> sn[1 to -2]
"trin"
>>> sn[3 to -5]
""

### string to operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ｓｔｒｉｎｇ"[1 to 3]
"ｔｒｉ"
>>> mbsn[1 to 3]
"ｔｒｉ"
>>> mbsn[to 3]
"ｓｔｒｉ"
>>> mbsn[1 to]
"ｔｒｉｎｇ"
>>> mbsn[3 to 3]
"ｉ"
>>> mbsn[1 to -2]
"ｔｒｉｎ"
>>> mbsn[3 to -5]
""


### string until operator
>>> String sn = "string";
>>> "string"[1 until 3]
"tr"
>>> sn[1 until 3]
"tr"
>>> sn[until 3]
"str"
>>> sn[1 until]
"tring"
>>> sn[3 until 3]
""
>>> sn[1 until -2]
"tri"
>>> sn[3 until -4]
""

### string until operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ｓｔｒｉｎｇ"[1 until 3]
"ｔｒ"
>>> mbsn[1 until 3]
"ｔｒ"
>>> mbsn[until 3]
"ｓｔｒ"
>>> mbsn[1 until]
"ｔｒｉｎｇ"
>>> mbsn[3 until 3]
""
>>> mbsn[1 until -2]
"ｔｒｉ"
>>> mbsn[3 until -4]
""


### string < operator
>>> String sn = "string";
>>> "a" < "z"
true
>>> "z" < "a"
false
>>> "0" < "a"
true
>>> " " < "0"
true
>>> "" < sn
true
>>> sn < "z"
true
>>> "a" < sn
true

### string > operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ａ" < "ｚ"
true
>>> "a" < "ａ"
true
>>> "ｚ" < "a"
false
>>> "あ" < "お"
true
>>> "ａ" < "あ"
false
>>> "" < mbsn
true
>>> mbsn < "ｚ"
true
>>> "a" < mbsn
true


### string > operator
>>> String sn = "string";
>>> "z" > "a"
true
>>> "a" > "z"
false
>>> "a" > "0"
true
>>> "0" > " "
true
>>> "z" > sn
true
>>> sn > "a"
true

### string > operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ａ" > "ｚ"
false
>>> "a" > "ａ"
false
>>> "ｚ" > "a"
true
>>> "あ" > "お"
false
>>> "ａ" > "あ"
true
>>> "" > mbsn
false
>>> mbsn > "ｚ"
false
>>> "a" > mbsn
false


### string == operator
>>> String sn = "string";
>>> "a" == "a"
true
>>> "a" == "z"
false
>>> sn == "string"
true
>>> sn == "strings"
false
>>> "" == ""
true

### string == operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ａ" == "ａ"
true
>>> "ｚ" == "ａ"
false
>>> mbsn == "ｓｔｒｉｎｇ"
true
>>> mbsn == "string"
false


### string != operator
>>> String sn = "string";
>>> "a" != "A"
true
>>> sn != "a"
true
>>> "z" != sn
true
>>> "string" != sn
false

### string != operator : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ａ" != "ａ"
false
>>> "ｚ" != "ａ"
true
>>> mbsn != "ｓｔｒｉｎｇ"
false
>>> mbsn != "string"
true

//*============================================*/
// method

### String.getSize
>>> String sn = "string";
>>> "".getSize();
0
>>> sn.getSize();
6

### String.getSize : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.getSize();
6


### String.get
>>> String sn = "string";
// >>> "".get();
// ""
>>> sn.get();
"s"

### String.get : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.get();
"ｓ"


### String.concat
>>> String sn = "string";
>>> "".concat();
""
>>> sn.concat();
"string"

### String.concat : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.concat();
"ｓｔｒｉｎｇ"


### String.equals
>>> String sn = "string";
>>> "".equals();
true
>>> sn.equals();
false

### String.equals : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.equals();
false


### String.subString
>>> String sn = "string";
>>> sn.subString(2, 2);
"ri"
>>> sn.subString(2);
"ring"
>>> sn.subString();
"string"

### String.subString : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.subString(2, 2);
"ｒｉ"
>>> mbsn.subString(2);
"ｒｉｎｇ"
>>> mbsn.subString();
"ｓｔｒｉｎｇ"


### String.startsWith
>>> String sn = "string";
>>> sn.startsWith("str");
true
>>> sn.startsWith("srt");
false
>>> sn.startsWith("");
true
>>> sn.startsWith();
true
>>> "".startsWith();
true

### String.startsWith : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.startsWith("ｓｔｒ");
true
>>> mbsn.startsWith("ｓｒｔ");
false
>>> mbsn.startsWith("");
true
>>> mbsn.startsWith();
true


### String.endsWith
>>> String sn = "string";
>>> sn.endsWith("ing");
true
>>> sn.endsWith("nig");
false
>>> sn.endsWith("");
true
>>> sn.endsWith();
true
>>> "".endsWith();
true

### String.endsWith : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.endsWith("ｉｎｇ");
true
>>> mbsn.endsWith("ｎｉｇ");
false
>>> mbsn.endsWith("");
true
>>> mbsn.endsWith();
true


### String.trim
>>> "   string   ".trim();
"string"
>>> " ".trim();
""

// ### String.trim : multi
// >>> "　　ｓｔｒｉｎｇ　　".trim();
// "ｓｔｒｉｎｇ"


### String.isASCII
>>> String sn = "string";
>>> sn.isASCII();
true
>>> "".isASCII();
true

### String.isASCII : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.isASCII();
false


### String.indexOf
>>> String sn = "string";
>>> sn.indexOf("r");
2
>>> sn.indexOf("z");
-1
>>> sn.indexOf("");
0
>>> "".indexOf("");
0
>>> sn.indexOf();
-1
>>> "".indexOf();
-1

### String.indexOf : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.indexOf("ｒ");
2
>>> mbsn.indexOf("r");
-1
>>> mbsn.indexOf("");
0
>>> mbsn.indexOf();
-1


// ### String.lastIndexOf
// >>> String sn = "string";
// >>> sn.lastIndexOf("r");
// 2
// >>> sn.lastIndexOf("z");
// -1
// >>> sn.lastIndexOf("");
// 6
// >>> "".lastIndexOf("");
// 0
// >>> sn.lastIndexOf();
// 6
// >>> "".lastIndexOf();
// 0

// ### String.lastIndexOf : multi
// >>> String mbsn = "ｓｔｒｉｎｇ";
// >>> mbsn.lastIndexOf("ｒ");
// 2
// >>> mbsn.lastIndexOf("ｚ");
// -1
// >>> mbsn.lastIndexOf("");
// 6
// >>> mbsn.lastIndexOf();
// 6


//### String.replace
//>>> String sn = "string";
//>>> "a".replace("a", "b");
//"b"
//>>> "a".replace("", "b");
//"a"
//>>> sn.replace("str", "script");
//"scripting"
//>>> sn.replace("str");
//"ing"
//>>> "".replace("test");
//""
//>>> sn.replace("", "test");
//"string"
//>>> "".replace("", "test");
//""
//// >>> sn.replace();
//// "string"
//// >>> "".replace();
//// ""
//
//### String.replace : multi
//>>> String mbsn = "ｓｔｒｉｎｇ";
//>>> mbsn.replace("ｓｔｒ", "ｓｃｒｉｐｔ");
//"ｓｃｒｉｐｔｉｎｇ"
//>>> mbsn.replace("ｓｔｒ");
//"ｉｎｇ"
//>>> mbsn.replace("", "ｔｅｓｔ");
//"ｓｔｒｉｎｇ"
//// >>> mbsn.replace();
//// "ｓｔｒｉｎｇ"


//### String.split
//>>> String sn = "string";
//>>> "a".split("a");
//["", ""]
//>>> "a".split("");
//["a"]
//>>> sn.split("r");
//["st", "ing"]
//>>> sn.split("z");
//["string"]
//>>> sn.split("");
//["s", "t", "r", "i", "n", "g"]
//>>> sn.split();
//["s", "t", "r", "i", "n", "g"]
//>>> "".split();
//[]
//
//### String.split : multi
//>>> String mbsn = "ｓｔｒｉｎｇ";
//>>> mbsn.split("ｒ");
//["ｓｔ", "ｉｎｇ"]
//>>> mbsn.split("ｚ");
//["ｓｔｒｉｎｇ"]
//>>> mbsn.split("");
// ["ｓ", "ｔ", "ｒ", "ｉ", "ｎ", "ｇ"]
// >>> mbsn.split();
// ["ｓ", "ｔ", "ｒ", "ｉ", "ｎ", "ｇ"]


//*============================================*/
// converter

### String.convert
>>> String sn = "string";
>>> sn.convert();
"string"
>>> "".convert();
""

### String.convert : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> mbsn.convert();
"ｓｔｒｉｎｇ"


### string to:upper converter
>>> String sn = "string";
>>> "a".convert(to:upper);
"A"
>>> "A".convert(to:upper);
"A"
>>> "1".convert(to:upper);
"1"
>>> "this is STRING.".convert(to:upper);
"THIS IS STRING."
>>> sn.convert(to:upper);
"STRING"
>>> "".convert(to:upper);
""

### string to:upper converter : multi
>>> String mbsn = "ｓｔｒｉｎｇ";
>>> "ａ".convert(to:upper);
"Ａ"
>>> "Ａ".convert(to:upper);
"Ａ"
>>> "あ".convert(to:upper);
"あ"
>>> "ｔｈｉｓ　ｉｓ　ＳＴＲＩＮＧ".convert(to:upper);
"ＴＨＩＳ　ＩＳ　ＳＴＲＩＮＧ"
>>> mbsn.convert(to:upper);
"ＳＴＲＩＮＧ"


### string to:lower converter
>>> "a".convert(to:lower);
"a"
>>> "A".convert(to:lower);
"a"
>>> "1".convert(to:lower);
"1"
>>> "this is STRING".convert(to:lower);
"this is string"
>>> "".convert(to:lower);
""

### string to:lower converter : multi
>>> "ａ".convert(to:lower);
"ａ"
>>> "Ａ".convert(to:lower);
"ａ"
>>> "あ".convert(to:lower);
"あ"
>>> "ｔｈｉｓ　ｉｓ　ＳＴＲＩＮＧ".convert(to:lower);
"ｔｈｉｓ　ｉｓ　ｓｔｒｉｎｇ"

