// Int Test

### int single division 
>>> 100 / 10
10

### int multiple division 
>>> 100 / 10 / 10
1

### int multiple division 
>>> 100 / (10 / 10)
100


### int multi add
>>> 1 + 2 + 3
6

### int add (with plus operator)
>>> 1 + + + 2
3

### int multi sub
>>> 1 - 2 - 3
-4

### int sub (with minus operator)
>>> 1 - - - 2
-1

### int mul (with plus and minus operator)
>>> 1 * - - + - -2
2

### int div (with plus and minus operator)
>>> 5 / - - - - - +3
-1

### int mod (with plus and minus operator)
>>> 5 % -3
2

### int mixing calc
>>> 7 + 1 - 6 * 2 / 5 % 3 + 4
10

### int mixing calc
>>> 7 - (1 % 6 * (2 / 5 + 3) - 4)
8

// const
### max = Int.MAX
>>> max = Int.MAX
9223372036854775807

### min = Int.MIN
>>> min = Int.MIN
-9223372036854775808

### max + max
>>> max + max
-2

### max + min
>>> max + min
-1

### min + max
>>> min + max
-1

### min + min
>>> min + min
0

### max - max
>>> max - max
0

### max - min
>>> max - min
-1

### min - max
>>> min - max
1

### min - min
>>> min - min
0

### max * max
>>> max * max
1

### max * min
>>> max * min
-9223372036854775808

### min * max
>>> min * max
-9223372036854775808

### min * min
>>> min * min
0

### max / max
>>> max / max
1

### max / min
>>> max / min
0

### min / max
>>> min / max
-1

### min / min
>>> min / min
1

### max++
>>> max++
9223372036854775807

### max
>>> max
-9223372036854775808

### min--
>>> min--
-9223372036854775808

### min
>>> min
9223372036854775807

// variable
### int i = 0
>>> int i = 0
0

### (i++) + 3
>>> (i++) + 3
3

### (i++) + (i++)
>>> (i++) + (i++)
3

### (i++) + (i--)
>>> (i++) + (i--)
7

### (i--) + (i++)
>>> (i--) + (i++)
5

// bit operate
### 0b... to int
>>> i = 0b101
5

### 0x... to int
>>> i = 0x12
18

### and operator
>>> 0b011 & 0b110
2

### or operator
>>> 0b101 | 0b010
7

### not operator (cannot eval this)
>>> ~0b101
-6

### eor operator (cannot eval this)
>>> 0b101 ^ 0b010
7

### bit operator priority ( "|" < "&" )
>>> 0b101 | 0b010 & 0b110
7

//### bit operator priority
//>>>  0b101 | (0b010 & 0b110)
//7

//### bit operator priority
//>>> (0b101 | 0b010) & 0b110
//6

### shift operator
>>> 0b011 << 1
6

### shift operator priority ( "&" < "<<" )
>>> 0b011 << 1 & 0b110
6

### multi left shift
>>> 0b101 << 1 << 2
40

### multi right shift
>>> 0b10100 >> 1 >> 2
5

### mixing shift
>>> 0b101 << 3 >> 2
10

### minus shift
>>> 0b101 << -1
-9223372036854775808

### shift large size
>>> 0b111 >> 64
0
