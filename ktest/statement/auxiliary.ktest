// auxiliary control statement

### continue for loop
>>> count = 2;
>>> start = 0;
>>> end = 0;
>>> for (i = 0; i < 5; i++) {
...   start += i;
...   if (i == count) {
...     continue;
...   }
...   end += i;
... }
>>> start
10
>>> end
8

### continue multi for loop
>>> count = 1;
>>> start0 = 0;
>>> start1 = 0;
>>> end0 = 0;
>>> end1 = 0;
>>> for (i = 0; i < 5; i++) {
...   start0 += i;
...   for (j = 0; j < 3; j++) {
...     start1 += j;
...     if (j == count) {
...       continue;
...     }
...     end1 += j;
...   }
...   end0 += i;
... }
>>> start0
10
>>> start1
15
>>> end0
10
>>> end1
10

### continue multi for loop with label
>>> count = 1;
>>> start0 = 0;
>>> start1 = 0;
>>> start2 = 0;
>>> end0 = 0;
>>> end1 = 0;
>>> end2 = 0;
>>> for (i = 0; i < 3; i++) {
...   start0 += i;
...   L0:
...   for (j = 0; j < 3; j++) {
...     start1 += j;
...     L1:
...     for (k = 0; k < 3; k++) {
...       start2 += k;
...       L2:
...       if (k == count) {
...         continue L0;
...       }
...       end2 += k;
...     }
...     end1 += j;
...   }
...   end0 += i;
... }
>>> start0
3
>>> start1
9
>>> start2
9
>>> end0
3
>>> end1
0
>>> end2
0

### break for loop
>>> count = 2;
>>> start = 0;
>>> end = 0;
>>> for (i = 0; i < 5; i++) {
...   start += i;
...   if (i == count) {
...     break;
...   }
...   end += i;
... }
>>> start
3
>>> end
1

### break multi for loop
>>> count = 1;
>>> start0 = 0;
>>> start1 = 0;
>>> end0 = 0;
>>> end1 = 0;
>>> for (i = 0; i < 5; i++) {
...   start0 += i;
...   for (j = 0; j < 3; j++) {
...     start1 += j;
...     if (j == count) {
...       break;
...     }
...     end1 += j;
...   }
...   end0 += i;
... }
>>> start0
10
>>> start1
5
>>> end0
10
>>> end1
0

### break multi for loop with label
>>> count = 1;
>>> start0 = 0;
>>> start1 = 0;
>>> start2 = 0;
>>> end0 = 0;
>>> end1 = 0;
>>> end2 = 0;
>>> for (i = 0; i < 3; i++) {
...   start0 += i;
...   L0:
...   for (j = 0; j < 3; j++) {
...     start1 += j;
...     L1:
...     for (k = 0; k < 3; k++) {
...       start2 += k;
...       L2:
...       if (k == count) {
...         break L0;
...       }
...       end2 += k;
...     }
...     end1 += j;
...   }
...   end0 += i;
... }
>>> start0
3
>>> start1
0
>>> start2
3
>>> end0
3
>>> end1
0
>>> end2
0

### return function
>>> int factorial(int n) {
...   return n * n;
... }
>>> factorial(3)
9

