//Class Test

### Class definition
>>> class A {
... int x;
... float y;
... String z;
... }
>>> A
main.A

### Class re-definition
>>> class A {
... String x;
... }
 - [(eval):1]:(error) re-definition of A(55)

### Create instance
>>> A a = new A();
A{x: 0, y: 0.00000, z: ""}

### Class definition with default value
>>> class B {
... int x = 2;
... float y = 3.0;
... String z = "hello";
... }
>>> B b = new B();
B{x: 2, y: 3.00000, z: "hello"}

### Setter
>>> a.x = 3;
3
>>> a.y = 2.0;
2.00000
>>> a.z = "hello"
"hello"
>>> a
A{x: 3, y: 2.00000, z: "hello"}

### set different type
>>> a.x = "string"
 - [(eval):2]:(type error) parameter 1 of setX must be konoha.Int, not konoha.String

### set undefined variable
>>> a.a = 0
 - [(eval):1]:(error) undefined method: A.setA

### Getter
>>> a.x
3
>>> a.y
2.00000
>>> a.z
"hello"

### Extends Class
>>> class C extends B {
... int x = 3;
... float y = 5.0;
... String z = "world";
... }

### Extends Class [Create instancd]
>>> c = new C();
C{x: 2, y: 3.00000, z: "hello", x: 3, y: 5.00000, z: "world"}

### Extends Class [Getter]
>>> c.x
3
>>> c.y
5.00000
>>> c.z
"world"

### Extends Class [Setter]
>>> c.x = 5;
5
>>> c.y = 7.0
7.00000
>>> c.z = "hi"
"hi"
>>> c
C{x: 2, y: 3.00000, z: "hello", x: 5, y: 7.00000, z: "hi"}

/*
### Extends of not defined class
>>> class C extends C {
... int x;
... }
 - [(shell):1]:(errata) unknown class: C ==> Object

### Class definition with Method
>>> class D {
... void myPrint(String str) {
... OUT << str << EOL;
... }
... }
>>> D d = new D();
D
>>> d.myPrint("hello");
hello
*/
/*
### Extends [Virtual Method]
>>> class V extends D {
... void myPrint(String str) {
... OUT << "Virtual:" << str << EOL;
... }
... }
>>> v = new V();
>>> v.myPrint("child");
*/
